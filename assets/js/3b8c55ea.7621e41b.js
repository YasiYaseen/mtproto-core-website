(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return d}));var o=t(3),r=t(8),a=(t(0),t(101)),i={title:"Installation",slug:"/"},s={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installation",description:"Requirements",source:"@site/docs/installation.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/alik0211/mtproto-core-website/edit/master/docs/installation.md",version:"current",sidebar:"docs",next:{title:"Setup. Handle Errors",permalink:"/docs/setup-handle-errors"}},l=[{value:"Requirements",id:"requirements",children:[]},{value:"Install",id:"install",children:[]},{value:"Select environment",id:"select-environment",children:[{value:"Import for <code>node</code> environment",id:"import-for-node-environment",children:[]},{value:"Import for <code>browser</code> environment",id:"import-for-browser-environment",children:[]}]},{value:"Configure default storage",id:"configure-default-storage",children:[{value:"For <code>node</code> environment",id:"for-node-environment",children:[]},{value:"For <code>browser</code> environment",id:"for-browser-environment",children:[]}]},{value:"Getting <code>api_id</code> and <code>api_hash</code>",id:"getting-api_id-and-api_hash",children:[]},{value:"Final check",id:"final-check",children:[{value:"Create simple file",id:"create-simple-file",children:[]},{value:"Run",id:"run",children:[]}]}],c={toc:l};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version >= 12 or above (which can be checked by running ",Object(a.b)("inlineCode",{parentName:"li"},"node -v"),"). You can use ",Object(a.b)("a",{parentName:"li",href:"https://github.com/nvm-sh/nvm"},"nvm")," for managing multiple Node versions on a single machine installed")),Object(a.b)("h2",{id:"install"},"Install"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @mtproto/core -E\n# or\nnpm i @mtproto/core -E\n")),Object(a.b)("h2",{id:"select-environment"},"Select environment"),Object(a.b)("p",null,"Depending on your environment, you need to use ",Object(a.b)("strong",{parentName:"p"},"different import paths"),". Currently, two environments are supported:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"strong"},"node"))," \u2014 if you run the code in the Node.js"),Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"strong"},"browser"))," \u2014 if you run the code in a browser environment")),Object(a.b)("h3",{id:"import-for-node-environment"},"Import for ",Object(a.b)("inlineCode",{parentName:"h3"},"node")," environment"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"const MTProto = require('@mtproto/core');\n// or\n// const MTProto = require('@mtproto/core/envs/node');\n")),Object(a.b)("h3",{id:"import-for-browser-environment"},"Import for ",Object(a.b)("inlineCode",{parentName:"h3"},"browser")," environment"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"const MTProto = require('@mtproto/core/envs/browser');\n")),Object(a.b)("h2",{id:"configure-default-storage"},"Configure default storage"),Object(a.b)("p",null,"We have default storages. The storage is used to store the session (authentication keys, server salts and time offset). Depending on the environment, you need to pass different parameters for the storage. But you can also use ",Object(a.b)("a",{parentName:"p",href:"/docs/custom-storage"},"custom storage")),Object(a.b)("h3",{id:"for-node-environment"},"For ",Object(a.b)("inlineCode",{parentName:"h3"},"node")," environment"),Object(a.b)("p",null,"In the ",Object(a.b)("inlineCode",{parentName:"p"},"storageOptions.path"),", pass the absolute path to the json file through the constructor"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"new MTProto({\n  storageOptions: {\n    path: path.resolve(__dirname, './data/1.json'),\n  },\n});\n")),Object(a.b)("h3",{id:"for-browser-environment"},"For ",Object(a.b)("inlineCode",{parentName:"h3"},"browser")," environment"),Object(a.b)("p",null,"The ",Object(a.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"},Object(a.b)("inlineCode",{parentName:"a"},"window.localStorage"))," is used for storage. You don't need to pass ",Object(a.b)("inlineCode",{parentName:"p"},"storageOptions")),Object(a.b)("h2",{id:"getting-api_id-and-api_hash"},"Getting ",Object(a.b)("inlineCode",{parentName:"h2"},"api_id")," and ",Object(a.b)("inlineCode",{parentName:"h2"},"api_hash")),Object(a.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"About abuse")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"If you use the Telegram API for flooding, spamming, faking subscriber and view counters of channels, you ",Object(a.b)("strong",{parentName:"p"},"will be banned forever")))),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Login into ",Object(a.b)("a",{parentName:"li",href:"https://my.telegram.org/"},"https://my.telegram.org/")),Object(a.b)("li",{parentName:"ol"},"Go to ",Object(a.b)("a",{parentName:"li",href:"https://my.telegram.org/apps"},"https://my.telegram.org/apps")," and fill out the form"),Object(a.b)("li",{parentName:"ol"},"Take the ",Object(a.b)("inlineCode",{parentName:"li"},"api_id")," and ",Object(a.b)("inlineCode",{parentName:"li"},"api_hash"),' from the "app configuration" section')),Object(a.b)("h2",{id:"final-check"},"Final check"),Object(a.b)("h3",{id:"create-simple-file"},"Create simple file"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js",metastring:'title="example.js"',title:'"example.js"'},"const MTProto = require('@mtproto/core');\n\nconst api_id = YOU_API_ID;\nconst api_hash = YOU_API_HASH;\n\n// 1. Create instance\nconst mtproto = new MTProto({\n  api_id,\n  api_hash,\n\n  storageOptions: {\n    path: path.resolve(__dirname, './data/1.json'),\n  },\n});\n\n// 2. Print the user country code\nmtproto.call('help.getNearestDc').then(result => {\n  console.log('country:', result.country);\n});\n")),Object(a.b)("h3",{id:"run"},"Run"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"node example.js\n")))}d.isMDXComponent=!0}}]);